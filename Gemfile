source "https://rubygems.org"
source "http://_token_:_token_@www.mikeperham.com/rubygems/"

# Used by the Heroku ruby buildpack to select the version of Ruby to include in the slug
# When we switch to having multiple ruby versions, we'll need to fork the ruby buildpack
# so that it can install several ruby versions in different paths and install the gems for
# these different rubies. Then, the ruby versions will be specified to the buildpack via a
# Heroku env variable named RUBY_VERSIONS as it used to be with the RUBY_VERSION one.
# See https://github.com/heroku/heroku-buildpack-ruby/blob/master/lib/language_pack/ruby.rb#L105

if RUBY_VERSION[2] == "1" || ENV['RUBY21']
  ruby "2.1.0"
else
  ruby "2.0.0"
end

# While waiting for Bundler 1.4. It will allow
# to have a boolean true in require option
# https://github.com/bundler/bundler/pull/2538
def env_enabled_options?(env_variable, other_options={} )
  all_options = (env_variable == 'false' ? { require: false } : {})
  all_options.merge(other_options)
end

gem 'preplay-settings', git: 'https://github.com/preplay/preplay-settings.git'

gem 'minitest', '4.7.4'

# Note: if you see undefined method [] for nilClass originating from Moped, it's probably that the
# the running ruby is 1.9.2
gem 'rack-cors', :require => 'rack/cors'
gem 'rails', '~> 4.0.0'
gem 'protected_attributes'

#gem 'sqlite3', require: false

gem 'oj', :platforms => [:ruby]
gem 'json', "1.8.0"
gem 'multi_json'

gem 'mime-types', :require => false, :git => "git://github.com/mathieuravaux/mime-types.git"

gem 'ox', :platforms => [:mri]
gem 'multi_xml'
gem 'faraday', '0.9.0.rc5', require: ['faraday', File.expand_path('../lib/gem_fixes/faraday', __FILE__)]

gem 'idn-ruby', :platforms => [:mri]

gem 'babosa'

gem 'fast_xs', :platforms => [:mri]
gem 'fast_blank', :git => "git://github.com/SamSaffron/fast_blank.git", :platforms => [:mri]

gem 'active_model_serializers', :git => "git://github.com/rails-api/active_model_serializers.git", :ref => "919bb3840107e8176a65d90c0af8ec1e02cef683"
gem 'activesupport', :require => "active_support" # To prevent accounting other gems for the load time of ActiveSupport

#TODO delete that as soon as the API is pure API
gem 'sprockets'

gem 'devise', "3.1.0"
gem 'devise-encryptable'

gem 'kaminari', "~> 0.14.0"
gem "has_scope"

gem 'r38y-aasm', :require => "aasm"

gem 'dalli', :require => false

# Set this to unreleased version 1.8: https://github.com/arsduo/koala/blob/2faff83/changelog.md
gem 'koala', require: ['faraday', 'faraday/request/multipart', 'faraday/response/raise_error', 'koala'], :git => "git://github.com/preplay/koala.git"

gem "mongoid", github: 'mongoid/mongoid'
gem "moped", github: 'mongoid/moped'

gem "preplay_mongoid_rails_migrations"

gem 'carrierwave'
gem "carrierwave-mongoid", github: 'preplay/carrierwave-mongoid'
gem 'cloudinary'

gem 'pusher'

# Token generated by simcap (i.e. when simcap is removed from Preplay
# this token cease to be valid)
gem 'boutique-client', git: "https://_token_:_token_@github.com/preplay/boutique-client.git"

gem 'excon' #'~> 0.16.2'
gem 'httpclient'

# TODO: bug the author so he releases a new version of the gem. Master
# contains the fixes for Symbol#<=> which created a lot of memory churn,
# committed 7 monthes ago, whereas the last release is 3 years old
gem 'plist', :git => "git://github.com/preplay/plist.git"

# Web servers
gem 'unicorn',  :require => false, :platforms  => [:mri]

gem 'puma', :require => false, :platforms  => [:jruby, :ruby]
gem 'passenger', require: false

gem 'bouncy-castle-java', :require => false, :platforms  => [:jruby]

#TODO delete that as soon as the API is pure API
gem 'jquery-rails', '>= 1.0.3'

gem 'celluloid', '~> 0.15.0'
gem 'connection_pool'

gem 'scrolls'
gem 'lograge'
gem 'rollbar', :require => false

unless ENV['SKIP_HIREDIS'] || RUBY_ENGINE == 'rbx'
  gem "hiredis", "~> 0.4.5", :require => false # mention it but don't require it. This line is here so that Gemfile.lock stays the same.
else
  gem "hiredis", "~> 0.4.5"
end

gem "redis", "~> 3.0.3", :require => begin
  [
    'redis',
    ('redis/connection/hiredis' unless (ENV['SKIP_HIREDIS'] || RUBY_ENGINE == 'rbx')),
     File.expand_path('../lib/gem_fixes/redis', __FILE__)
  ].compact
end

gem 'redis-namespace'

gem 'inherited_resources', "~> 1.3"

gem 'cancan'

gem 'chronic'

gem 'haml-rails' # Needed for custom Devise emails rendering

gem 'aws-sdk', :require => false

group :autoload do
  gem 'httparty'
  gem 'mailchimp', :git => 'git://github.com/preplay/mailchimp-gem.git', :branch => 'multi_json_and_streaming' # Added support for MultiJson and response streaming
  gem 'nokogiri'

  gem 'rack-protection'
  gem 'i18n', '~> 0.6'
  gem 'hooks', "~> 0.1.4"

  gem "profanity_filter",  :git => 'git://github.com/preplay/profanity_filter.git'
  gem 'progressbar', "~> 0.20.0"
end

gem 'sidekiq-pro'
gem 'sidekiq-scheduler', github: "preplay/sidekiq-scheduler"
gem 'sinatra', '>= 1.3.0', :require => nil # for sidekiq web interface


group :production, :staging, :integration do
  gem 'rails_12factor'
end

gem 'flamegraph'
gem 'rack-mini-profiler', github: 'preplay/rack-mini-profiler'
#gem 'memory_profiler', require: false

group :development, :test do
  gem 'fabrication', '~> 1.2.0'

  gem 'fuubar', :require => false
  gem 'timecop', :require => false
end

group :development do
  gem 'guard', :require  => false
  gem 'guard-spork', :require => false
  gem 'guard-rspec', :require => false

  gem 'foreman', :require => false
  gem 'quiet_assets'

  gem "pry"
end

group :test do
  gem 'spork', "~> 0.9.2", :require => false
  gem "codeclimate-test-reporter", require: nil
  gem 'fakeweb'

  # Pretty printed test output
  gem 'rspec', :require => false
  gem 'rspec-rails'
  gem 'rspec-instafail', :require => false
  gem 'simplecov', :require => false
  gem 'faker'
end

group :dev_incompatible_with_ruby_head do
  # gem "heap_dump", :require => false, :platforms => [:mri]
  # gem "rspec-prof", :require => false, :platforms => [:mri]
  # gem "pry-debugger", :require => false, :platforms => [:mri]
  gem "pry-stack_explorer", '>= 0.4.7', :require => false, :platforms => [:mri]
end
